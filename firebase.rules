rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Orders collection rules
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.customerId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'tailor']
      );
      // Allow authenticated users to create orders
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'tailor'];
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /orderImages/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
